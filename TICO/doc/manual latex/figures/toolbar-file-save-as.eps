%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/home/negre/memoria/figures/manual/toolbar-file-save-as.eps)
%%CreationDate: (Tue Nov 14 10:33:31 2006)
%%BoundingBox: 0 0 11 11
%%HiResBoundingBox: 0 0 11.0236 11
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 11 11
userdict begin
DisplayImage
0 0
11.0236 11.0236
12.000000
28 28
0
0
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC90A097567E9538678B38678B38678B38678B
47708D6F898DB6BBB0CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC2C4BB4572936799BC
84AED175A9D38FB6DB75A9D563A0CE63849357788AA9B0A3CCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C2C4BB61849368A2CE45799D4073963B6C91477DA363A0CE74A8D46BA5D34A80A8446D8B
B1B7ABCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC7C9290869E9E6E8B93B0B6A8CCCCCCB4B9AC49738C487EA2
5E9AC75E9AC75B96C14B81A747718AC8C9C6CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC5E7E8C8D9F9AC7C8C3CCCCCC
CCCCCCCCCCCCA6AFA13B6C91538CB55892BD5B96C1609DCB69858D889A90CCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
7E938EA2A59A6E706B6E706B6E706B6E706B75796C38678B5892BD5892BD5892BD5892BD
68899354727B6E706B6E706B6E706B6E706BA1A2A0CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCA9B0A272756BF6F6F6F6F6F6F6F6F6F6F6F6F6F6F638678B
5892BD5892BD5892BD5892BD609CCA38678BF6F6F6F6F6F6F6F6F6F6F6F66E706BCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCB3B4B3838580ECECECF6F6F6
EBEBEBEBEBEBEBEBEB38678B5892BD5089B25892BD5892BD63A1D038678BEBEBEBEBEBEB
D8DAD8EBEBEB838580BBBBBACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
A6A7A59B9D99ECECECEAEBEAF6F6F638678B38678B38678B5892BD5089B25892BD5892BD
629FCE38678B3C6D9138678BE1E2E1EBEBEB949691ACADABCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC898A87CCCCCBE3E3E3EBEBEBEBEBEB38678B609CCA609CCA
67A3D25089B2518BB55892BD5B96C15C97C35E99C638678BEBEBEBEBEBEBCFCFCD9C9D9A
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC6E706BE6E6E6E3E3E3EBEBEB
EBEBEBD2D6CC3C6D91609CCA4E87B05088B14E87B05089B24E87B05C97C33C6D91CCD1C5
EBEBEBEBEBEBECECEC6E706BCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCBBBBBA
777975ECECECF6F6F6EBEBEBEBEBEBEBEBEBCAD0C438678B609CCA4E87B04E87B05088B1
5C97C338678BCAD0C4EBEBEBEBEBEBF6F6F6ECECEC7F817EBBBBBACCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCACADAB8E8F8DECECECE5E5E5F6F6F6F6F6F6EDEDEDEBEBEBCAD0C4
38678B609CCA5088B15C97C338678BCAD0C4EBEBEBF6F6F6F6F6F6E5E5E5ECECEC8E8F8D
ACADABCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC9C9D9AB8B8B8E7E7E7E9E9E8E7E7E7
E5E5E5F6F6F6F6F6F6F6F6F6D3D8CC38678B609CCA3C6D91D3D8CCF6F6F6F6F6F6E5E5E5
E5E5E5E2E2E1E0E0E0B1B1B0989996CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC858783
D0D0D06E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B6D746538678B6E7465
6E706B6E706B6E706B6E706B6E706B6E706B6E706BCECECE8D8F8CCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCC6E706BF6F6F66E706BDEDFDFDFDEDEDEDEDFDEDEDEDEDFDFDEDEDE
DFDFDEDEDEDEDEDEDEDEDFDFDFDEDEDEDEDE000000DEDEDEDFDFDEDFDFDF6E706BF6F6F6
6E706BCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC6E706BE1E1E16E706BE8E8E8CACACA
CACACACACACACACACACACACACACACACACACACACACACACACACACACAEEEEEE000000F0F0EF
F0F0F1F0F0F06E706BE1E1E16E706BCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC6E706B
E1E1E16E706BFAF9FACACACACACACACACACACACACACACACACACACACACACACACACACACACA
CACACAFFFFFF000000FFFFFFFFFFFFFFFFFF6E706BE1E1E16E706BCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCC6E706BE1E1E16E706BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFF6E706BE1E1E1
6E706BCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC6E706BE1E1E16E706B6E706B6E706B
6E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B
6E706B6E706B6E706BE1E1E16E706BCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC6E706B
CBCBCBE1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1
E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1C8C8C86E706BCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCA4A4A36E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B
6E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B6E706B
B1B1B1CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
end
%%PageTrailer
%%Trailer
%%EOF
