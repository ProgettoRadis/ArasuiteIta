%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/home/negre/memoria/figures/manual/board-list-delete.eps)
%%CreationDate: (Tue Nov 14 10:33:29 2006)
%%BoundingBox: 0 0 9 9
%%HiResBoundingBox: 0 0 8.66142 9
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 9 9
userdict begin
DisplayImage
0 0
8.66142 8.66142
12.000000
22 22
0
0
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCB0B1AF888A85888A85
888A85888A85888A85888A85888A85888A85888A85888A85888A85888A85888A85888A85
AFB0AECCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC888A85FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF888A85CCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC888A85FFFFFFE3E3E3E3E3E3E3E3E3E3E3E3E3E3E3
E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3FDFDFD888A85CCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCC888A85FFFFFFE2DDDDE2DDDDE1D8D8E1D3D3E1D0D0E0CECEE0CDCD
E1CFCFE1D2D2E1D6D6E2DADAE2DFDFFDFDFD888A85CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCC888A85FFFFFFE1D2D2E0CDCDE0C7C7E0C2C2E1C1C1E1C0C0E1C0BFE1C1C1E1C3C2
E0C6C7E1CBCCE1D2D2FDFDFD888A85CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC888A85
FFFFFFE0C6C6E0BEBEE0B8B8FFFFFFFFFFFFE1AFAFE1AFAFFFFFFFFFFFFFE2B7B7E1BDBD
E0C8C7FBFBFB888A85CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC888A85FFFFFFDFBCBC
DFB1B0E1AAAAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1A9A9E1AFAFE2BFBEFBFBFB
888A85CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC888A85FFFFFFE0B3B3DFA1A2E09B9B
E09595FFFFFFFFFFFFFFFFFFFFFFFFE19595E29A9AE1A1A1E2B5B6F8F8F8888A85CCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC888A85FFFFFFE0AAAADE9494DF8C8CDF8585FFFFFF
FFFFFFFFFFFFFFFFFFE08484E08A8AE19393E3ACADF6F6F6888A85CCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCC888A85FFFFFFE09F9FDE8787DE7D7DFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFDF7B7BDF8484E2A2A2EFEFEF888A85CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCC888A85FFFFFFDF9796DC797ADD6F6FFFFFFFFFFFFFDC5B5BDC5B5AFFFFFFFFFFFF
DD6C6CDE7777E29999EFEFEF888A85CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC888A85
FFFFFFDE8E8EDB6E6EDB6161DA5656D94D4DD94848DA4848DA4B4BDB5353DC5E5EDD6A6A
E19191EFEFEF888A85CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC888A85FFFFFFDD8787
DA6363D95555D84848D63D3DD63636D63535D73B3BD84444D95252DB6060E08989EFEFEF
888A85CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC888A85FFFFFFE4B9B9D96363D95555
D74747D63C3CD53535D53435D63A3AD84444D95151DB5F5FE7BDBDEFEFEF888A85CCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC888A85FFFFFFFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFAFAFAFAFAFAFAFAFAF6F6F6F6F6F6F6F6F6EFEFEF888A85CCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCB0B1AF888A85888A85888A85888A85888A85888A85888A85888A85
888A85888A85888A85888A85888A85888A85B0B1AFCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
end
%%PageTrailer
%%Trailer
%%EOF
