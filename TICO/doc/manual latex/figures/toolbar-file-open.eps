%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/home/negre/memoria/figures/manual/toolbar-file-open.eps)
%%CreationDate: (Tue Nov 14 10:33:31 2006)
%%BoundingBox: 0 0 11 11
%%HiResBoundingBox: 0 0 11.0236 11
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 11 11
userdict begin
DisplayImage
0 0
11.0236 11.0236
12.000000
28 28
0
0
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCBEBEBDA2A59F9FA19C
9EA19B9EA19B9EA19B9EA19B9EA19B9EA19B9EA19B9EA19B9FA19C9EA19BB4B5B3CCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCABAEA7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFF2F2F2A2A59FCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCB6B6B6
6567646668666668666668676E706EA7A9A4FFFFFFFCFCFBFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFAFAFAFAFAFAEEEEEDA8ABA5CCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCC686866BEBFBEBEBFBEBEBFBEBEBFBEA7A9A5C1C3C0FFFFFFCBCBCA
B1B2B1B3B3B2B3B4B2B3B3B2B3B3B2B3B3B3B3B3B2B1B2B1C2C3C1EEEEEDA6A9A3CCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC686967B2B3B280807F80807F8A8B89
A6A9A3FBFBFBEFEFEDEFEFEEF3F3F1F5F5F4F5F5F3F3F3F2F2F2F1F2F2F0F0F0EFF0F0EE
F4F4F2DADBDAA2A59FCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC6E6E6D
B9BBC1939393939393A6A9A3E0E0DFF0F0F0D0D0CE9C9D9BA4A6A4A4A6A4A5A6A4A4A6A4
A0A2A0A0A2A0A7A8A6C6C6C4F1F1F0C4C6C2AEB1ABCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCC696B68B3B3B39B9B9B858683A1A49EE9E9E8CFCFCCCACBC8C9CBC7
CACAC8CACAC8CBCCC9CACAC8CBCCC8CCCDC9CACAC8E0E1E0C9CAC99C9F9ABCBEBACCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC8587849B9C9AA4A4A490928FE3E3E3
D5D5D3ADAEACA0A29FA0A19F9FA19E9F9F9C9E9F9C9F9F9C9FA19DA3A5A0ACADA9E0E0DE
9C9F9ABBBDBACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC959694
878885A0A19FA8ABA4B8BCBD5E758F3465A43465A43465A43465A43465A43465A43465A4
3465A43C68A13C68A13465A43465A43465A43465A43465A473859BCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCA4A4A3777876A5A8A2D9D9D8868A8DBBCEE3BCCFE4BCCFE4BCD0E5
BCD0E6BDD1E7BED2E8BDD1E7BDD1E7BED2E8BED2E8BED2E8BED2E8BED2E8BED2E8BED2E8
547397CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCADADAC737473A2A59FE6E6E54E6D95
B3C8E189AED689AED689AED689AED689AED689AED689AED689AED689AED689AED689AED6
89AED689AED689AED6A3BFDE4B6D97CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC0C1C0
6263619FA19BCCCECB547093B2C8E089AED689AED689AED689AED689AED689AED689AED6
89AED689AED689AED689AED689AED689AED689AED695ADCB5476A0CCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC6A6B69ACAEAAC0C1BD879AAEB1C7E089AED689AED689AED6
89AED689AED689AED689AED689AED689AED689AED689AED689AED689AED698B8DB8AA4C4
ADADACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC61615FAAADA6687582A0B0C1
A1BEDD88ADD687ADD587ACD687ACD587ACD587ACD687ACD588ADD687ADD587ACD687ACD6
87ACD687ACD5A2BFDE708DB0C0C1C0CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
81817F8788858191A5ACC5DF92B5D980A9D480A9D480A8D480A8D37FA8D480A8D480A8D3
81A8D480A9D480A8D480A8D480A8D492B4D99EBCDD547196CCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC9696957B7C7993AAC29AB9DB79A3D279A3D279A3D279A4D1
79A3D278A3D279A4D179A3D279A4D279A3D279A4D179A4D179A3D28CB1D86E8BB0A1A2A0
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC6C6C6A2A2A26A6B68B2C4D887AED7
719FD0719FD0719FD0719FCF719FCF709FCF719FCF719FCF729FD0719FD0719FCF719FCF
87AED687AED6526B89CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCB6B6B6
8D8D8D5859586B9BCE6B9BCE6B9BCE6B9BCE6B9BCE6B9ACD6A9ACE6A9ACD6B9ACD6A9ACE
6B9BCE6B9BCE6B9ACD6A9ACE83AAD5839DBD7F8994CACACACCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCC1C1C1A5A5A57A7A793465A43465A43465A43465A43465A43465A4
3465A43465A43465A43465A43465A43465A43465A43465A43465A448658AA1A1A1C1C1C1
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC6C6C6BEBEBEB4B4B4AAAAAA
A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9
AAAAAAAEAEAEB6B6B6C5C5C5CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCACACACACACACACACACACACACACACACACACACACACACACACACACACA
CACACACACACACACACACACACACACACACACACACBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
end
%%PageTrailer
%%Trailer
%%EOF
