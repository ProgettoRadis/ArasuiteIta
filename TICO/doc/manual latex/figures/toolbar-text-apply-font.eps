%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/home/negre/memoria/figures/manual/toolbar-text-apply-font.eps)
%%CreationDate: (Tue Nov 14 10:33:31 2006)
%%BoundingBox: 0 0 11 11
%%HiResBoundingBox: 0 0 11.0236 11
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 11 11
userdict begin
DisplayImage
0 0
11.0236 11.0236
12.000000
28 28
0
0
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCA3A4A1888A85888A85888A85888A85888A85888A85888A85
888A85888A85888A85888A85888A85888A85888A85888A85888A85888A85888A85A3A4A1
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA888A85FEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFE8F908CCACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA
888A85FFFFFFC2C3C1FEFEFEC2C3C1FEFEFEC2C3C1FDFDFDC1C2C0FCFCFBC1C2C0FAFAFA
C0C1BFF9F9F8BFC0BEF8F8F7BFC0BDF7F7F6FEFEFE8F918CCACACACCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFC
FCFCFBFBFBFAFAFAFAD0DEEBB8CDE4F8F8F8F8F8F7F7F7F6F6F6F6F6F6F5FEFEFE8F918C
CACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFC2C3C1FEFEFE
FDFDFDFDFDFDFCFCFCFBFBFBFBFBFAFAFAFAF6F7F884ABD49AB9DAF8F8F7F7F7F6F6F6F5
F6F6F5F5F5F4FEFEFE8F918CCACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA
888A85FFFFFFFEFEFEFDFDFDFDFDFCFCFCFCFBFBFBFBFBFAFAFAFAFAFAF9B9CEE4719ECE
80A6D0F7F7F6F6F6F5F6F6F5F5F5F4F4F4F3FEFEFE8F918CCACACACCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFC2C3C1FDFDFCFCFCFCFBFBFBFBFBFAFAFAFA
F9F9F9EBF0F393B4D777A0CE6795C6F1F3F3F6F6F5F5F5F4F4F4F3F4F4F3FEFEFE8F918C
CACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFFDFDFCFCFCFC
FBFBFBFBFBFAFAFAFAF9F9F9F9F9F8A2BFDDD6E1EC8AADD26290C4D9E1EAF5F5F4F4F4F3
F4F4F2F3F3F2FEFEFE8F918CCACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA
888A85FFFFFFC1C2C0FBFBFBFBFBFAFAFAF9F9F9F9F9F9F8DBE4EE9BB9DAF7F7F6A0BBD8
5D8CC0BCCDDFF4F4F3F4F4F2F3F3F2F2F2F1FEFEFE8F918CCACACACCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFFBFBFBFBFBFAFAFAF9F9F9F9F9F9F8F7F8F7
8FB1D6E5EBF0F6F6F5B9CBDF5887BD9FB7D5F4F4F2F3F3F2F2F2F1F2F2F0FEFEFE8F918C
CACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFC0C1BFFAFAF9
F9F9F9F9F9F8F8F8F7C3D4E6ACC3DDF6F6F5F5F5F4D1DCE75483BA82A2C8F3F3F2F2F2F1
F2F2F0F1F1EFFEFEFE8F918CCACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA
888A85FFFFFFFAFAF9F9F9F9F9F9F8F8F8F7F0F2F476A0CDAEC4DCB2C6DDB0C4DBA5BCD6
4F7EB6628ABCF2F2F1F2F2F0F1F1EFF0F0EFFEFEFE8F918CCACACACCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFC0C1BEF8F8F8F8F8F7F7F7F6ABC3DDA8C0DC
C5D4E4C4D3E3C1D0E0BFCEDF5582B74575B0EBEDEDF1F1EFF0F0EFF0F0EEFEFEFE8F918C
CACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFF8F8F8F8F8F7
F7F7F6E2E9EF7BA1CCF2F3F3F5F5F3F4F4F3F3F3F2F3F3F16C91BE4070ACCDD7E1F0F0EF
F0F0EEEFEFEDFEFEFE8F918CCACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA
888A85FFFFFFBFC0BEF7F7F6F5F6F687AAD0BBCDE0F5F5F3F4F4F3F3F3F2F3F3F1F2F2F1
819FC53B6CA9ACBED4F0F0EEEFEFEDEEEEECFEFEFE8F918CCACACACCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFF7F7F6F6F6F5BBCDE26793C5F2F3F2F4F4F3
F3F3F2F3F3F1F2F2F0F1F1F094ACCB3667A686A1C4EFEFEDEEEEECEEEEECFEFEFE8F918C
CACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFBEBFBDBDCFE1
6490C35E8BBFABC1D9EDEEEFF3F3F1F2F2F0EAECEDA3B8D14F79AF3465A4406EA89FB4CD
EEEEECEEEEECFEFEFE8F918CCACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA
888A85FFFFFFF6F6F5F5F5F4F4F4F3F4F4F2F3F3F2F2F2F1F2F2F0F1F1F0F1F1EFF0F0EE
EFEFEEEFEFEDEEEEECEEEEECEEEEECEEEEECFEFEFE8F918CCACACACCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFBEBFBCF4F4F3F4F4F2F3F3F2F2F2F1F2F2F0
F1F1F0F1F1EFF0F0EEEFEFEDEFEFEDEEEEECEEEEECEEEEECEEEEECEEEEECFEFEFE8F918C
CACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCACACA888A85FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFF8F918CCACACACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
A2A3A0888A85888A85888A85888A85888A85888A85888A85888A85888A85888A85888A85
888A85888A85888A85888A85888A85888A85888A85A1A2A0CCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCBCBCBC0C1C1B9BABAB1B3B2ABACACA3A4A59C9D9D959898
8E9191898B8B868889898B8B8E91919598989C9D9EA2A4A5AAACACB1B3B2B9B9B9C3C3C3
CBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
end
%%PageTrailer
%%Trailer
%%EOF
